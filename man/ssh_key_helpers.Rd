% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers_github.R, R/helpers_github_bak.R
\name{ssh_key_helpers}
\alias{ssh_key_helpers}
\alias{github_add_key}
\alias{check_admin_repo}
\alias{get_role_in_repo}
\alias{get_public_key}
\alias{encode_private_key}
\alias{check_private_key_name}
\alias{github_info}
\title{SSH key helpers}
\usage{
github_add_key(
  pubkey,
  repo = get_repo(remote),
  user = get_user(),
  title = "travis",
  remote = "origin",
  check_role = TRUE
)

check_admin_repo(owner, user, repo)

get_role_in_repo(owner, user, repo)

get_public_key(key)

encode_private_key(key)

check_private_key_name(string)

github_info(path = ".", remote = "origin", .token = NULL)
}
\arguments{
\item{pubkey}{The public key of the SSH key pair}

\item{repo}{\verb{[string]}\cr
The repository slug to use. Must follow the "\code{user/repo}" structure.}

\item{user}{Personal user account to authenticate with}

\item{title}{The title of the key to add}

\item{remote}{\verb{[string]}\cr
The Github remote which should be used. Defaults to "origin".}

\item{check_role}{Whether to check if the current user has the permissions to
add a key to the repo. Setting this to \code{FALSE} makes it possible to add keys
to other repos than just the one from which the function is called.}

\item{owner}{The owner of the repository}

\item{key}{The SSH key pair object}

\item{string}{String to check}

\item{path}{\verb{[string]}\cr
The path to a GitHub-enabled Git repository (or a subdirectory thereof).}

\item{.token}{\verb{[character]}\cr
Authentication token. Defaults to GITHUB_PAT or GITHUB_TOKEN environment
variables, in this order if any is set. See gh_token() if you need more
flexibility, e.g. different tokens for different GitHub Enterprise
deployments.}
}
\description{
Retrieves metadata about a Git repository from GitHub.

\code{github_info()} returns a list as obtained from the GET "/repos/:repo" API.
}
\details{
SSH key helpers
}
\seealso{
Other GitHub functions: 
\code{\link{github_repo}()}
}
\concept{GitHub functions}
