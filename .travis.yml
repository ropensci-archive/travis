## tic Travis CI template: linux-macos-matrix-deploy
## revision date: 2020-05-09

matrix:
  include:
    - os: osx
      r: release
    - os: osx
      r: oldrel
    - os: linux
      r: devel
    - os: linux
      r: release
      env:
      # if you use bookdown or blogdown, replace "PKGDOWN" by the respective
      # capitalized term. This also might need to be done in tic.R
      - BUILD_PKGDOWN=true
    - os: linux
      r: oldrel

# meta -------------------------------------------------------------------------
language: r
cache:
  - packages
  - $HOME/.ccache
  - $HOME/Library/Caches/Homebrew
latex: false

# environment variables --------------------------------------------------------

env:
  global:
    - MAKEFLAGS="-j 2"

# Stages -----------------------------------------------------------------------

before_install:
  - if [ "${TRAVIS_OS_NAME}" == "osx" ]; then brew install ccache; fi
  - if [ "${TRAVIS_OS_NAME}" == "osx" ]; then export PATH="/usr/local/opt/ccache/libexec:$PATH"; fi
  - echo -e "options(Ncpus = 8, repos = structure(c(CRAN = 'https://cloud.r-project.org/')))" > $HOME/.Rprofile
  - mkdir -p $HOME/.R && echo -e 'CC=ccache gcc -std=gnu99\nCXX=ccache g++\nCXX11=ccache g++ -std=gnu99\nCXX14=ccache g++ -std=gnu99\nCXX17=ccache g++ -std=gnu99\nFC=ccache gfortran\nF77=ccache gfortran' > $HOME/.R/Makevars
  - mkdir -p $HOME/.ccache && echo -e 'max_size = 5.0G\nsloppiness = include_file_ctime\nhash_dir=false' > $HOME/.ccache/ccache.conf
  - R -q -e 'if (!requireNamespace("remotes")) install.packages("remotes")'
  - R -q -e 'if (getRversion() < "3.2" && !requireNamespace("curl")) install.packages("curl")'
  - R -q -e 'remotes::install_github("ropensci/tic", upgrade = "always"); print(tic::dsl_load()); tic::prepare_all_stages()'
  - R -q -e 'tic::before_install()'
install:
  - R -q -e 'tic::install()'
before_script:
  - R -q -e 'tic::before_script()'
script:
  - R -q -e 'tic::script()'
after_success:
  - R -q -e 'tic::after_success()'
after_failure:
  - R -q -e 'tic::after_failure()'
before_deploy:
  - R -q -e 'tic::before_deploy()'
deploy:
  provider: script
  script: R -q -e 'tic::deploy()'
  on:
    all_branches: true
after_deploy:
  - R -q -e 'tic::after_deploy()'
after_script:
  - R -q -e 'tic::after_script()'
